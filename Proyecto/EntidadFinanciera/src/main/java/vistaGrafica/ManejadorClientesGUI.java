/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistaGrafica;

import controlador.ConexionBD;
import controlador.ControladorBD;
import controlador.ControladorClientes;
import controlador.ControladorCuentasAhorros;
import controlador.ControladorCuentasCorriente;
import excepciones.VerificarNombreUsuario;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Cajero;
import modelo.Cliente;
import modelo.CuentaCorriente;
import modelo.Usuario;

/**
 *
 * @author rafael
 */

public class ManejadorClientesGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClienteGUI
     */
    private ControladorClientes contrCli;
    private ControladorCuentasCorriente contrCorr;
    private ControladorCuentasAhorros contrAho;
    private DefaultTableModel model;
    ControladorBD contrBD;
    
    Object rowData[];
    Usuario usu;
    
    public ManejadorClientesGUI(Usuario usu) {
        initComponents();
        contrCli = new ControladorClientes();
        contrCorr = new ControladorCuentasCorriente();
        contrAho = new ControladorCuentasAhorros();
        contrBD = new ControladorBD();
        
        model = (DefaultTableModel)jTableClientes.getModel();
        rowData = new Object [6];
        
        actualizarTabla();
        
        this.usu = usu;
        
        Cajero caj = new Cajero();
        
        if(usu.getClass() == caj.getClass()){
            // Esconder todos los botones menos el de ordenar y actualizar:
            
            jButtonEliminar.setVisible(false);
            jButtonModificar.setVisible(false);
            jButtonNuevo.setVisible(false);
            setTitle("Información de Clientes");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonNuevo = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jButtonModificar = new javax.swing.JButton();
        jButtonOrdenar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();

        setTitle("Manejador de Clientes");

        jButtonNuevo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonActualizar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Apellido", "Direccion", "Telefono", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableClientes);

        jButtonModificar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonOrdenar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonOrdenar.setText("Ordenar");
        jButtonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonModificar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonOrdenar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonActualizar)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void vaciarTabla(){
        model.setRowCount(0);     
    }
    
    
    private void llenarTabla(){
        for(Cliente cli:contrCli.arregloClientes){
            rowData[0] = cli.getCedula();
            rowData[1] = cli.getNombre();
            rowData[2] = cli.getApellido();
            rowData[3] = cli.getDireccion();
            rowData[4] = cli.getTelefono();
            rowData[5] = cli.getCorreo();
            model.addRow(rowData);
        }
    }
    
    private void actualizarTabla(){
        vaciarTabla();
        llenarTabla();
    }
    
    
    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertarCliente().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        
        // Aquí también iría el metodo de consultar de la base de datos
        actualizarTabla();
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        
        
        int row = jTableClientes.getSelectedRow();
        
        int idCliente = (int)jTableClientes.getModel().getValueAt(row, 0);
        
        Cliente cli = new Cliente();
        cli.setCedula(idCliente);
        cli = (Cliente) contrCli.consultarUno(cli);
        
        
        Cliente new_cli = new Cliente();
        
        
        new_cli.setNombre(jTableClientes.getModel().getValueAt(row, 1).toString());
        new_cli.setApellido(jTableClientes.getModel().getValueAt(row, 2).toString());
        new_cli.setDireccion(jTableClientes.getModel().getValueAt(row, 3).toString());
        new_cli.setTelefono(Long.parseLong(jTableClientes.getModel().getValueAt(row, 4).toString()));
        new_cli.setCorreo(jTableClientes.getModel().getValueAt(row, 5).toString());
        
        // La cedula y la contraseña no se pueden modificar
        new_cli.setCedula(cli.getCedula());
        new_cli.setContrasena(cli.getContrasena());
        
        if(!contrCli.modificar(cli, new_cli))
            JOptionPane.showMessageDialog(null, "Error al modificar cliente");
        else
            contrBD.modificarCliente(new_cli);
        
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarActionPerformed
        contrCli.ordenar();
        actualizarTabla();
    }//GEN-LAST:event_jButtonOrdenarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        
        int row = jTableClientes.getSelectedRow();
        
        int idCliente = (int)jTableClientes.getModel().getValueAt(row, 0);
        
        
        Cliente cli = new Cliente();
        cli.setCedula(idCliente);
        
        
        // Primero hay que verificar si el cliente tiene cuentas abiertas:
        
        if(contrCorr.consultarCliente(idCliente) || contrAho.consultarCliente(idCliente)){
            JOptionPane.showMessageDialog(null, "El cliente con cedula "+idCliente + " no puede eliminarse, pues todavía tiene cuentas abiertas en el banco");
        }
        else{
        model.removeRow(row);
        contrCli.borrar(cli);
        contrBD.eliminarCliente(cli);
        JOptionPane.showMessageDialog(null, "El cliente con cedula "+idCliente + " ha sido eliminado exitosamente");    
        
     
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

  
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClienteGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ClienteGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonOrdenar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableClientes;
    // End of variables declaration//GEN-END:variables
}
