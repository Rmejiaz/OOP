/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistaGrafica;

import controlador.ControladorAdministradores;
import controlador.ControladorBD;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Administrador;

/**
 *
 * @author rafael
 */
public class ManejadorAdmins extends javax.swing.JFrame {

    /**
     * Creates new form ControladorAdmins
     */
    
    ControladorAdministradores contrAdmins;
    private DefaultTableModel model;
    Object rowData[];
    ControladorBD contrBD;
    
    public ManejadorAdmins() {
        initComponents();
        
        contrAdmins = new ControladorAdministradores();
        contrBD = new ControladorBD();
        
        model = (DefaultTableModel)jTableAdmins.getModel();
        rowData = new Object [7];
        
        actualizarTabla();
        
        
        jComboBoxSortBy.addActionListener(new ActionListener() {  
                                            public void actionPerformed(ActionEvent e) {
                                            
                                                if(jComboBoxSortBy.getSelectedItem().equals("Nombre")){
                                                    contrAdmins.ordenarNombres();
                                                    actualizarTabla();
                                                }
                                                else{
                                                    contrAdmins.ordenar();
                                                    actualizarTabla();
                                            }}
                                            });
        
        
    }
    
    
    private void llenarTabla(){
        for(Administrador admin:contrAdmins.arregloAdministradores){
            rowData[0] = admin.getCedula();
            rowData[1] = admin.getIdAdmin();
            rowData[2] = admin.getNombre();
            rowData[3] = admin.getApellido();
            rowData[4] = admin.getTelefono();
            rowData[5] = admin.getCorreo();
            rowData[6] = admin.getDireccion();
            
            model.addRow(rowData);
        }
    }
    
    private void vaciarTabla(){
        model.setRowCount(0);
    }
    
    private void actualizarTabla(){
        vaciarTabla();
        llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAdmins = new javax.swing.JTable();
        jButtonNuevo = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxSortBy = new javax.swing.JComboBox<>();

        setTitle("Manejador de Administradores");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jTableAdmins.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "idAdmin", "Nombre", "Apellido", "Telefono", "Correo", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableAdmins);

        jButtonNuevo.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonActualizar.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Ordenar Por:");

        jComboBoxSortBy.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jComboBoxSortBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Cedula" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonNuevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonModificar)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(jButtonActualizar)))
                .addGap(49, 49, 49))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        //Tambi√©n se debe consultar de la bd antes
        actualizarTabla();
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        
        int row = jTableAdmins.getSelectedRow();
        
        int cedula = (int)jTableAdmins.getModel().getValueAt(row, 0);
        
        
        Administrador admin = new Administrador();
        admin.setCedula(cedula);
        
        
        // Tambi√©n hay que eliminarlo de la bd
        
        if(!contrAdmins.borrar(admin))
            JOptionPane.showMessageDialog(null, "Error al eliminar administrador");
        else{
            JOptionPane.showMessageDialog(null, "El administrador con cedula "+cedula+" ha sido eliminado exitosamente");
            contrBD.eliminarAdmin(admin);
            model.removeRow(row);
        
        }
        
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        int row = jTableAdmins.getSelectedRow();
        
        int cedula = (int)jTableAdmins.getModel().getValueAt(row, 0);
        
        
        Administrador admin = new Administrador();
        admin.setCedula(cedula);
        
        admin = (Administrador)contrAdmins.consultarUno(admin);
        
        Administrador new_admin = new Administrador();
        
        new_admin.setCedula(admin.getCedula());
        new_admin.setIdAdmin(admin.getIdAdmin());
        new_admin.setContrasena(admin.getContrasena());
        
        new_admin.setNombre(jTableAdmins.getModel().getValueAt(row, 2).toString());
        new_admin.setApellido(jTableAdmins.getModel().getValueAt(row, 3).toString());
        new_admin.setTelefono(Long.parseLong(jTableAdmins.getModel().getValueAt(row, 4).toString()));
        new_admin.setCorreo(jTableAdmins.getModel().getValueAt(row, 5).toString());
        new_admin.setDireccion(jTableAdmins.getModel().getValueAt(row, 6).toString());
        
        if(!contrAdmins.modificar(admin, new_admin))
            JOptionPane.showMessageDialog(null, "Error al modificar administrador");
        else
            contrBD.modificarAdministrador(new_admin);
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertarAdmin().setVisible(true);
            }
        });
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        actualizarTabla();
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ManejadorAdmins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ManejadorAdmins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ManejadorAdmins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ManejadorAdmins.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ManejadorAdmins().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JComboBox<String> jComboBoxSortBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAdmins;
    // End of variables declaration//GEN-END:variables
}
